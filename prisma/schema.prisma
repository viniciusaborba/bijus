// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id              String   @id @default(uuid())
  name            String
  cellphoneNumber String   @unique
  cpf             String   @unique
  email           String   @unique
  address         String
  password        String
  role            Role     @default(USER)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  Order           Order[]

  @@map("users")
}

model Category {
  id       String    @id @default(uuid())
  name     String
  slug     String
  imageUrl String
  products Product[]
}

model Product {
  id                 String   @id @default(uuid())
  name               String
  slug               String
  description        String
  basePrice          Decimal  @db.Decimal(8, 2)
  imageUrls          String[]
  categoryId         String
  category           Category @relation(fields: [categoryId], references: [id])
  discountPercentage Int      @default(0)
  order              Order    @relation(fields: [orderId], references: [id])
  orderId            String
}

model Order {
  id        String      @id @default(uuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
  status    OrderStatus @default(WAITING_FOR_PAYMENT)
  quantity  Int
  Products  Product[]
}

enum OrderStatus {
  WAITING_FOR_PAYMENT
  PAYMENT_CONFIRMED
  CANCELED
}
